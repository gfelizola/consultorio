<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:skin="app.skin.*"
		  width="1020" height="700" creationComplete="init()"
		  showStatusBar="false" title="IMPRESSÃO DE CONSULTA" xmlns:view="app.view.*">
	
	<!--
	<fx:Style source="app/style/Estilo.css" />
	-->
	
	<fx:Script>
		<![CDATA[
			import app.enums.EIdades;
			import app.model.Antropometria;
			import app.model.Consulta;
			import app.model.DB;
			import app.model.Paciente;
			import app.model.ResumoConsulta;
			import app.util.General;
			import app.util.Helpers;
			import app.util.ImpressaoUtils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.HRule;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.printing.FlexPrintJob;
			import mx.printing.FlexPrintJobScaleType;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			
			import org.casalib.util.ArrayUtil;
			
			public var impressos:Array = [];
			
			private var consultas:ArrayCollection;
			private var paginas:Array = [];
			private var conteudos:Array = [];

			private var currentConsulta:app.model.Consulta;

			private var verMan:Boolean;

			private var vazios:Array;
			
			private function init():void
			{
				var p:Paciente = General.pacienteAtual ;
				var idade:Number = Helpers.idade(p.dataNascimento);
//				var endereco:String = '';
				
				txtNomePaciente.text = p.nomeCompleto ;
				
//				if( p.endereco != '' ) 		endereco = 			p.endereco ;
//				if( p.complemento != '' ) 	endereco += ' - ' + p.complemento ;
//				if( p.cidade != '' ) 		endereco += ' - ' + p.cidade ;
//				if( p.estado != '' && p.estado != null ) 		endereco += ' - ' + p.estado ;
//				txtEnderecoPaciente.text = endereco ;
				
				var c:Criteria = DB.em.createCriteria(app.model.Consulta);
				c.addEqualsCondition("paciente", p.id );
				c.addSort("dataConsulta");
				
				consultas = DB.em.fetchCriteria(c);
				var consulta:app.model.Consulta = General.consultaAtual ;
				
				paginas.push( pagina1 );
				
				var pagina2:Group = criaPagina();
				var pagina3:Group = criaPagina();
				paginas.push( pagina2 );
				paginas.push( pagina3 );
				
				if( consulta ){
					if( consulta.recomendacoes != '' ) txtRecomendacoes.text = consulta.recomendacoes ;
					
					verificaResumo(consulta);
					buidlAll(consulta);
				}
							
				var grafico:Graficos = new Graficos();
				grafico.height = 420 ;
				
				if( p.idade / 12 <= EIdades.CRIANCA ){ 
					grafico.percentWidth = 100 ;
					grafico.height = 800 ;
					
					var container:VGroup = pagina2.getChildByName('container') as VGroup;
					container.addElement( gpDietas );
				} else {
					grafico.width = 720 ;
					grafico.x = 140 ;
				}
				
				gpGraficos.addElement( grafico );
			}
			
			private function verificaResumo(c:app.model.Consulta):void
			{
				var r:ResumoConsulta = c.resumo ;
				if( r ){
					txtTMB.text = Math.round( r.metabolismoBasal ) + ' kcal/dia' ;
					if( c.semanaGestacional > 0 ){
						if( ! isNaN(r.necessidadeEnergeticaGestacional) ){
							txtEER.text = Math.round ( r.necessidadeEnergeticaGestacional ) + ' kcal/dia' ;
						} else {
							vgEER.visible = vgEER.includeInLayout = false ;
						}
					} else {
						if( ! isNaN(r.necessidadeEnergetica) ){
							txtEER.text = Math.round( r.necessidadeEnergetica ) + ' kcal/dia' ;
						} else {
							vgEER.visible = vgEER.includeInLayout = false ;
						}
					}
				} else {
					hgTMB.visible = hgTMB.includeInLayout = false ;
				}
			}
			
			private function buildAntropometria(c:app.model.Consulta, container:VGroup):void
			{
				var a:Antropometria = c.antropometria ;
				if( a != null ){
					
					ImpressaoUtils.criaAntropometria(c, container, false, 14);
					
					if( ! isNaN(a.circunferenciaCintura) && ! isNaN(a.circunferenciaQuadril) && ! c.paciente.gestante ){
						if( a.circunferenciaCintura > 0 && a.circunferenciaQuadril ){
							txtCircCintura.text = a.circunferenciaCintura.toFixed(2) + ' cm';
							txtRCQ.text = ( a.circunferenciaCintura / a.circunferenciaQuadril ).toFixed(2);
							
							txtCCDescricao.text = a.getCircunferenciaCinturaDescription(c.paciente) ;
							txtRCQDescricao.text = a.getRCQDescription(c.paciente) ;
							
						} else {
							gpRCQ.visible = false ;
							gpCircCintura.visible = false ;
						}
					} else {
						gpRCQ.visible = false ;
						gpCircCintura.visible = false ;
					}
					
					if( ! isNaN( a.imc ) ){
						if( a.imc > 0 ) txtIMC.text = a.imc.toFixed(2);
						txtIMCDescricao.text = a.getIMCDescription( c ) ;
					} else {
						gpIMC.visible = false ;
					}
				}
			}
			
			private function buidlAll(c:app.model.Consulta):void
			{
				currentConsulta = c;
				
				var cs:Array = getContainers();
				var d1:VGroup = cs[0];
				var e1:VGroup = cs[1];
				var d2:VGroup = cs[2];
				var e2:VGroup = cs[3];
				vazios = [d1,e1,d2,e2];
				verMan = false ;
				
				gpDietas.visible = gpDietas.includeInLayout = false ;
				
				for (var i:int = 0; i < impressos.length; i++) 
				{
					if( impressos[i] == ImpressaoUtils.MAN )
					{
						if( c.man )
						{
							d1.addElement( criaRegua( 40 ) );
							d1.addElement( criaTitulo('man') );
							ImpressaoUtils.criaMAN( c, d1, false, 14);
							ArrayUtil.removeItem( vazios, d1 );
						}
						
					}
					else if( impressos[i] == ImpressaoUtils.ANTROPOMETRIA )
					{
						if( c.antropometria )
						{
							d1.addElement( criaTitulo('antropometria') );
							buildAntropometria(	c, d1 );
							ArrayUtil.removeItem( vazios, d1 );
						}
						
					}
					else if( impressos[i] == ImpressaoUtils.EXAMES_BIOQUIMICOS )
					{
						if( c.exameBioquimico ){
							d2.addElement( criaTitulo('exames bioquímicos') );
							ImpressaoUtils.criaExamesBioquimicos( c, d2, false, false, 14);
							ArrayUtil.removeItem( vazios, d2 );
						}
						
					}
					if( impressos[i] == ImpressaoUtils.DADOS_ALIMENTARES )
					{
						if( c.dadosAlimentares ) {
							e1.addElement( criaTitulo('dados alimentares') );
							ImpressaoUtils.criaDadosAlimentares( c, e1, false, 14);
							ArrayUtil.removeItem( vazios, e1 );
						}
					}
					if( impressos[i] == ImpressaoUtils.ATIVIDADES_FISICAS )
					{
						if( c.atividadeFisica ){
							e2.addElement( criaTitulo('atividades físicas') );
							ImpressaoUtils.criaAtividadesFisicas( c, e2, false, 14);
							ArrayUtil.removeItem( vazios, e2 );
						}
					}
					else if( impressos[i] == ImpressaoUtils.ORIENTACOES )
					{
						gpDietas.visible = gpDietas.includeInLayout = true ;
					}
					else if( impressos[i] == ImpressaoUtils.MAN ){
						verMan = true ;
					}
				}
				
				d1.addEventListener(FlexEvent.CREATION_COMPLETE, onContainerCreationComplete);
				e1.addEventListener(FlexEvent.CREATION_COMPLETE, onContainerCreationComplete);
				d2.addEventListener(FlexEvent.CREATION_COMPLETE, onContainerCreationComplete);
				e2.addEventListener(FlexEvent.CREATION_COMPLETE, onContainerCreationComplete);
				
				gpObs.visible = (( c.resumo.necessidadeEnergetica ) && ( c.antropometria.imc >= 25 ) || ( c.antropometria.imc <= 18.5 ) );
			}
			
			private function onContainerCreationComplete(e:FlexEvent):void
			{
				if ( ! ArrayUtil.contains( conteudos, e.currentTarget) > 0 ) 
				{
					conteudos.push( e.currentTarget );
					
					if( conteudos.length == 4 )
					{
						var margem:Number = 50 ;
						var cts:Array = getContainers(true);
						var colunasPagina1:HGroup = cts[4];
						var colunasPagina2:HGroup = cts[5];
						var colunasAtual:HGroup = colunasPagina1 ;
						var colunasIndex:int = 0 ;
						var novoContainer:VGroup = criaVGroup( margem );
						var agrupados:Array;
						var inseridos:Array = [] ;
						var alturaAtual:Number = 0 ;
						var totalContainer:int = 4 ;
						var totalInseridos:int = 0 ;
						
						colunasPagina1.removeAllElements();
						colunasPagina2.removeAllElements();
						
						for (var i:int = 0; i < totalContainer; i++) 
						{
							var c1:VGroup = cts[i] ;
							if( ! ArrayUtil.contains( inseridos, i ) > 0 && ! ArrayUtil.contains( vazios, c1 ) > 0 )
							{
								agrupados = [c1] ;
								alturaAtual = c1.height + margem ;
								
								for (var j:int = i; j < totalContainer; j++) 
								{
									var c2:VGroup = cts[j] ;
									if( c2 != c1 && ! ArrayUtil.contains( vazios, c2 ) )
									{
										if( c2.height + alturaAtual < 1000 )
										{
											agrupados.push( c2 );
											inseridos.push( j );
											alturaAtual += c2.height + margem ;
										}
									}
								}
								
								for (var k:int = 0; k < agrupados.length; k++) 
								{
									novoContainer.addElement( agrupados[k] );
								}
								
								colunasAtual.addElement( novoContainer );
								novoContainer = criaVGroup( margem );
								colunasIndex ++ ;
								
								if( colunasIndex >= 2 ){
									colunasIndex = 0;
									if( colunasAtual == colunasPagina1 ) colunasAtual = colunasPagina2 ;
								}
							}
						}
						
						if( colunasAtual == colunasPagina1 || colunasAtual.numElements < 1 )
						{
							paginas[2].visible = paginas[2].includeInLayout = false ;
						}
					}
				}
			}
			
			private function criaTitulo(titulo:String):Label
			{
				var l:Label = new Label();
				l.styleName = 'bold' ;
				l.text = titulo.toUpperCase() ;
				l.setStyle('fontSize', 20);
				return l
			}
			
			private function criaRegua( margem:Number, withRule:Boolean = true ):HGroup
			{
				var g:HGroup = new HGroup();
				g.percentWidth = 100 ;
				g.paddingBottom = margem ;
				g.paddingTop = margem ;
				
				if( withRule ){
					var r:HRule = new HRule();
					r.percentWidth = 100 ;
					g.addElement(r);
				}
				
				return g;
			}
			
			private function criaVGroup( gap:Number = 0 ):VGroup
			{
				var vg:VGroup = new VGroup();
				vg.percentWidth = 100 ;
				vg.gap = gap ;
				vg.maxHeight = 1000 ;
				return vg;
			}
			
			private function criaPagina():Group
			{
				var g:Group = new Group();
				g.name = 'pagina' + ( Math.round( Math.random() * 9999 ) ) ;
				g.width = 1000 ;
				g.height = 1414 ;
				
				var vContainer:VGroup = new VGroup();
				vContainer.percentWidth = 100 ;
				vContainer.height = 1200 ;
				vContainer.name = 'container' ;
				g.addElement(vContainer);
				
				var header:ConsultaResumoHeader = new ConsultaResumoHeader();
				header.percentWidth = 100 ;
				vContainer.addElementAt(header, 0);
				
				var footer:ConsultaResumoFooter = new ConsultaResumoFooter();
				footer.bottom = 30;
				footer.percentWidth = 100 ;
				g.addElementAt(footer, 0);
				
				var colunas:HGroup = new HGroup();
				colunas.percentWidth = 100 ;
				colunas.y = 180 ;
				colunas.gap = 50 ;
				colunas.paddingLeft = 10 ;
				colunas.paddingRight = 10 ;
				colunas.name = 'colunas' ;
				
				var colunaDireita:VGroup 	= criaVGroup(7);
				colunaDireita.name 			= 'colunaDireita' ;
				
				var colunaEsquerda:VGroup 	= criaVGroup(7);
				colunaEsquerda.name 		= 'colunaEsquerda' ;
				
				colunas.addElement(colunaDireita);
				colunas.addElement(colunaEsquerda);
				vContainer.addElement(colunas);
				scrolado.addElement(g);
				
				return g;
			}
			
			private function getContainers( addColunas:Boolean = false ):Array
			{
				var p1:Group = paginas[1] ;
				var v1:VGroup = p1.getChildByName('container') as VGroup;
				var c1:HGroup = v1.getChildByName('colunas') as HGroup;
				var d1:VGroup = c1.getChildByName('colunaDireita') as VGroup;
				var e1:VGroup = c1.getChildByName('colunaEsquerda') as VGroup;
				
				var p2:Group = paginas[2] ;
				var v2:VGroup = p2.getChildByName('container') as VGroup;
				var c2:HGroup = v2.getChildByName('colunas') as HGroup;
				var d2:VGroup = c2.getChildByName('colunaDireita') as VGroup;
				var e2:VGroup = c2.getChildByName('colunaEsquerda') as VGroup;
				
				if( addColunas )
				{
					return [ d1, e1, d2, e2, c1, c2 ];
				}
				return [ d1, e1, d2, e2 ];
			}
			
			private function onImprimir(e:MouseEvent):void
			{
				btnImprimir.visible = false ;
				
				var pj:FlexPrintJob = new FlexPrintJob();
				pj.start();
				
				for (var i:int = 0; i < paginas.length; i++) 
				{
					if( paginas[i].visible ) pj.addObject( paginas[i], FlexPrintJobScaleType.MATCH_HEIGHT );
				}
				
				pj.send();
				
				btnImprimir.visible = true ;
				this.close();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Scroller width="100%" height="100%">
		<s:VGroup id="scrolado" width="100%" height="100%" clipAndEnableScrolling="true">
			<s:Group id="pagina1" width="1000" height="1414">
				<s:VGroup width="100%" paddingLeft="0" paddingTop="0" paddingRight="0" paddingBottom="0" gap="10">
					<view:ConsultaResumoHeader width="100%" />
					
					<s:Group id="gpDadosPaciente">
						<s:Label id="txtNomePaciente" x="0" y="0" width="980" height="40" fontSize="30"
								 styleName="bold" text="Nome do paciente" textAlign="center"/>
						<!--<s:Label id="txtEnderecoPaciente" x="0" y="40" width="980" height="50" fontSize="24"
								 text="Endereco do paciente" textAlign="center"/>-->
					</s:Group>
					
					<s:HGroup id="hgTMB" width="100%" gap="20" paddingLeft="110" paddingRight="110">
						<s:VGroup id="vgIMC" width="50%" gap="5">
							<s:Label width="100%" height="25" fontSize="20" styleName="bold"
									 text="METABOLISMO BASAL" textAlign="center"/>
							<s:Label id="txtTMB" width="100%" height="25" fontSize="20" text="" textAlign="center"/>
							<s:Label width="100%" fontSize="9" color="#BBBBBB" text="Harris J, Benedict F. A biometric study of basal metabolism in man. Washington D.C. Carnegie Institute of Washington. 1919." textAlign="center"/>
						</s:VGroup>
						<s:VGroup id="vgEER" width="50%">
							<s:Label x="0" y="0" width="100%" height="25" fontSize="20" styleName="bold"
									 text="NECESSIDADE ENERGÉTICA" textAlign="center"/>
							<s:Label id="txtEER" x="0" y="30" width="100%" height="25" fontSize="20"
									 text="" textAlign="center"/>
							
							<s:Label width="100%" fontSize="9" color="#BBBBBB" text="Institute of Medicine. Dietary reference intakes: applications in dietary planning. Washington, DC: National Academies Press, 2002." textAlign="center"/>
						</s:VGroup>
					</s:HGroup>
					
					<s:Group id="gpObs" visible="false">
						<s:Label id="txtInfo1" x="0" y="5" width="980" fontSize="12"
								 styleName="light" text="Importante: o valor da TMB foi calculado com o peso atual (e não ideal) do paciente. Como o IMC está fora" textAlign="center"/>
						<s:Label id="txtInfo2" x="0" y="20" width="980" height="25" fontSize="12"
								 styleName="light" text="da faixa ideal, certifique-se se este é mesmo o valor que você gostaria de ter utilizado na fórmula." textAlign="center"/>
					</s:Group>
					
					<s:Group id="gpGraficos" width="100%" />
					
					<s:HGroup id="gpFinais" width="100%" gap="10" paddingLeft="20" paddingRight="20">
						<s:VGroup id="gpIMC" width="33%" gap="5">
							<s:Label width="100%" height="25" fontSize="18" styleName="bold" text="IMC" />
							<s:HGroup gap="10" width="100%">
								<s:Label id="txtIMC" width="30%" fontSize="16" text="" />
								<s:Label id="txtIMCDescricao" width="70%" fontSize="14" styleName="light" text="" />
							</s:HGroup>
							<s:Label width="100%" color="#BBBBBB" fontSize="9"
									 text="OMS. Organização Mundial da Saúde. Diet, nutrition and the prevention of chronic diseases. Geneva, WHO; 2003."/>
						</s:VGroup>
						<s:VGroup id="gpCircCintura" width="34%" gap="5">
							<s:Label x="0" y="0" width="100%" height="25" fontSize="18" styleName="bold" text="CIRCUNFERÊNCIA DA CINTURA" />
							<s:HGroup x="0" y="25" gap="10" width="100%">
								<s:Label id="txtCircCintura" width="30%" fontSize="16" text="" />
								<s:Label id="txtCCDescricao" width="70%" fontSize="14" styleName="light" text="" />
							</s:HGroup>
							<s:Label width="100%" color="#BBBBBB" fontSize="9"
									 text="BRASIL. Ministério da Saúde. Vigilância Alimentar e Nutricional – SISVAN. Orientações básicas para a coleta, o processamento, a analise de dados e a informação em serviços de saúde. Diário Oficial da União Brasília, 2004"/>
						</s:VGroup>
						<s:VGroup id="gpRCQ" width="33%" gap="5">
							<s:Label x="0" y="0" width="100%" height="25" fontSize="18" styleName="bold" text="RELAÇÃO CINTURA X QUADRIL" />
							<s:HGroup x="0" y="25" gap="10" width="100%">
								<s:Label id="txtRCQ" fontSize="16" width="30%" text="" />
								<s:Label id="txtRCQDescricao" fontSize="14" width="70%" styleName="light" text="" />
							</s:HGroup>
							<s:Label width="100%" color="#BBBBBB" fontSize="9"
									 text="WORLD HEALTH ORGANIZATION . Obesity: Preventing and managing the global epidemic – Report of a WHO consultation on obesity. Geneva, 1998."/>
						</s:VGroup>
					</s:HGroup>
					
					<s:VGroup id="gpDietas" width="100%" paddingLeft="20" paddingRight="20" gap="10">
						<s:Label id="txtTitRecomendacoes" width="100%" height="25" fontSize="18" styleName="bold" text="ORIENTAÇÕES NUTRICIONAIS" />
						<s:Label id="txtRecomendacoes" width="100%" fontSize="16" text="" />
					</s:VGroup>
				</s:VGroup>
				
				<view:ConsultaResumoFooter width="100%" bottom="30" />
			</s:Group>
		</s:VGroup>
	</s:Scroller>
	
	<s:Button id="btnImprimir" top="10" right="30" label="IMPRIMIR" icon="assets/images/icoImprimir.png" skinClass="app.skin.Button" click="onImprimir(event)" />
</s:Window>