<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="1004" height="500" show="init()" creationComplete="init()">
	<fx:Script>
		<![CDATA[
			import app.controller.Navigation;
			import app.enums.EAreas;
			import app.model.AtividadeFisica;
			import app.model.Consulta;
			import app.model.DB;
			import app.model.Paciente;
			import app.util.General;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.formatters.DateFormatter;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			import nz.co.codec.flexorm.criteria.Sort;

			private var consultas:ArrayCollection;
			
			[Bindable]
			private var minIdade:Number;
			
			[Bindable]
			private var pesos:ArrayCollection;
			
			private function init():void
			{
				var p:Paciente = General.pacienteAtual ;
				
				if( p == null )
				{
					Navigation.navega(EAreas.HOME);
					return ;
				}
				
				if( p.dataNascimento ){
					var idade:Number = ( new Date().fullYear ) - p.dataNascimento.fullYear ;
					txtIdade.text = idade + " ANOS" ;
				} else {
					txtIdade.visible = txtIdade.includeInLayout = false ;
				}
				
				var perfil:String = "";
				
				txtSemanaGestacional.visible = false ;
				
				if( idade > 60 )
				{
					perfil = "IDOSO" ;
					vsGraficos.selectedIndex = 3 ;
				}
				else if( idade < 20 )
				{
					perfil = "CRIANÇA" ;
					vsGraficos.selectedIndex = 1 ;
				}
				else 
				{
					if( p.gestante )
					{
						perfil = "GESTANTE" ;
						if( p.dataUltimaMenstruacao ){
							txtSemanaGestacional.text = p.semanaGestacional + "ª SEMANA GESTACIONAL" ;
							txtSemanaGestacional.visible = true ;
						} else {
							txtSemanaGestacional.visible = txtSemanaGestacional.includeInLayout = false ;
						}
						
						vsGraficos.selectedIndex = 2 ;
					}
					else
					{
						perfil = "ADULTO" ;
						if( p.nutriz ) perfil += " / NUTRIZ" ;
					}
				}
				
				txtPerfil.text = perfil ;
				
				var c:Criteria = DB.em.createCriteria(app.model.Consulta);
				c.addEqualsCondition("paciente", p.id );
				c.addSort("dataConsulta", Sort.DESC );
				
				consultas = DB.em.fetchCriteria(c);
				var consulta:app.model.Consulta = consultas.length > 0 ? consultas.getItemAt(0) as app.model.Consulta : null ;
				
				if( consulta )
				{
					var df:DateFormatter = new DateFormatter();
					df.formatString = "DD/MM/YYYY HH:NN" ;
					txtUltimaConsulta.text = df.format( consulta.dataConsulta );
					
					if( consulta.antropometria ){
						txtUltimoIMC.text = consulta.antropometria.imc.toPrecision(2) ;
					} else {
						txtUltimoIMC.text = "N/A" ;
					}
					
					if( consulta.atividadeFisica )
					{
						var nivelAtividade:String = "" ;
						switch(consulta.atividadeFisica.nivel)
						{
							case AtividadeFisica.MUITO_ATIVO:
								nivelAtividade = "MUITO ATIVO" ;
								break;
							case AtividadeFisica.ATIVO:
								nivelAtividade = "ATIVO" ;
								break;
							case AtividadeFisica.POUCO_ATIVO:
								nivelAtividade = "POUCO ATIVO" ;
								break;
							case AtividadeFisica.SEDENTARIO:
								nivelAtividade = "SEDENTÁRIO" ;
								break;
						}
						
						txtAtividade.text = nivelAtividade ;
					} else {
						txtAtividade.visible = txtAtividade.includeInLayout = false ;
					}
				}
				else
				{
					txtUltimaConsulta.text = "NENHUMA CONSULTA REALIZADA" ;
					txtUltimoIMC.text = "N/A" ;
					txtAtividade.text = "" ;
					txtAtividade.visible = txtAtividade.includeInLayout = false ;
					
					Alert.noLabel = "Não" ;
					Alert.yesLabel = "Sim" ;
					
					Alert.show("Este paciente ainda não possui nenhuma consulta cadastrada.\nDeseja iniciar uma agora", "Confirma consulta", Alert.YES|Alert.NO, null, onAlertaNovaConsulta);
				}
				
				consultas.source.reverse();
				pesos = new ArrayCollection();
				
				minIdade = 0 ;
				
				for (var i:int = 0; i < consultas.length; i++) 
				{
					var cons:app.model.Consulta = consultas.getItemAt(i) as app.model.Consulta ;
					if( cons.antropometria ){
						pesos.addItem({ 
							dataConsulta:General.getFormattedDate(cons.dataConsulta.toString()), 
							peso:cons.antropometria.peso, 
							imc:cons.antropometria.imc, 
							altura:cons.antropometria.estatura,
							semana:cons.semanaGestacional,
							idade:cons.idadeNaConsulta()
						});
						
						if( minIdade == 0 ) minIdade = cons.idadeNaConsulta() ;
					}
				}
			}
			
			private function onAlertaNovaConsulta(e:CloseEvent):void
			{
				if( e.detail == Alert.YES )
				{
					if( General.consultaAtual == null ) General.consultaAtual = new app.model.Consulta();
					ViewStack(this.parent).selectedIndex = 3 ;
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Rect x="10" y="10" width="205" height="480" radiusX="10" radiusY="10">
		<s:fill>
			<s:SolidColor color="#FAFDFE"></s:SolidColor>
		</s:fill>
	</s:Rect>
	
	<s:Rect x="225" y="10" width="769" height="480" radiusX="10" radiusY="10">
		<s:fill>
			<s:SolidColor color="#FAFDFE"></s:SolidColor>
		</s:fill>
	</s:Rect>
	
	
	<s:VGroup gap="6" x="20" y="20">
		<s:Label id="txtPerfil" x="20" width="185" height="30" color="#81BAEA" fontSize="20"
				 styleName="bold" text="ADULTO"/>
		
		<s:Label id="txtIdade" x="20" width="185" height="20" text="30 ANOS"/>
		<s:Label id="txtAtividade" x="20" width="185" height="20" text="SEDENTÁRIO"/>
		<s:Label id="txtSemanaGestacional" x="20" width="185" height="20" text="32 SEMANA GESTACIONAL"/>
	</s:VGroup>
	
	<s:Label x="20" y="200" width="185" height="30" color="#81BAEA" fontSize="20" styleName="bold" text="ÚLTIMA CONSULTA"/>
	<s:Label id="txtUltimaConsulta" x="20" y="230" width="185" height="60" text="30 ANOS"/>
	
	<s:Label x="20" y="350" width="185" height="30" color="#81BAEA" fontSize="20" styleName="bold" text="ÚLTIMO IMC"/>
	<s:Label id="txtUltimoIMC" x="20" y="380" width="185" height="20" text="18,5"/>
	
	<mx:HRule x="10" y="170" width="205" height="2" chromeColor="#E0EFFB"/>
	<mx:HRule x="10" y="330" width="205" height="2" chromeColor="#E0EFFB"/>
	
	<mx:ViewStack id="vsGraficos" x="235" y="22" width="746" height="460">
		<s:NavigatorContent width="100%" height="100%" label="Peso">
			<s:VGroup gap="5">
				<s:Label width="500" color="#81BAEA" fontSize="20" styleName="bold" text="GRÁFICO DE VARIAÇÃO DE PESO"/>
				<s:Label width="500" text="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
				
				<mx:LineChart id="curvaDePeso" dataProvider="{pesos}" width="500" height="300" showDataTips="true" seriesFilters="{[]}">
					<mx:horizontalAxis>
						<mx:CategoryAxis categoryField="dataConsulta" title="Data da consulta" />
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="Peso" />
					</mx:verticalAxis>
					
					<mx:series>
						<mx:LineSeries displayName="Peso" form="curve" yField="peso">
							<mx:lineStroke>
								<mx:SolidColorStroke color="#81BAEA" weight="7" />
							</mx:lineStroke>
							<mx:itemRenderer>
								<fx:Component>
									<mx:CrossItemRenderer />
								</fx:Component>
							</mx:itemRenderer>
						</mx:LineSeries>
					</mx:series>
					
				</mx:LineChart>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Peso">
			<s:VGroup gap="5">
				<s:Label width="500" color="#81BAEA" fontSize="20" styleName="bold" text="CURVA DE CRESCIMENTO"/>
				<s:Label width="500" text="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
				
				<mx:LineChart id="curvaDeCrescimento" dataProvider="{pesos}" width="500" height="300" showDataTips="true" seriesFilters="{[]}">
					<mx:horizontalAxis>
						<mx:LinearAxis title="IDADE (meses)" minimum="{minIdade}" />
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="PESO (kg)" />
					</mx:verticalAxis>
					
					<mx:series>
						<mx:LineSeries displayName="Peso" form="curve" yField="peso" xField="idade">
							<mx:lineStroke>
								<mx:SolidColorStroke color="#81BAEA" weight="7" />
							</mx:lineStroke>
							<mx:itemRenderer>
								<fx:Component>
									<mx:CrossItemRenderer />
								</fx:Component>
							</mx:itemRenderer>
						</mx:LineSeries>
					</mx:series>
					
				</mx:LineChart>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Atalah">
			<s:VGroup gap="5">
				<s:Label width="500" color="#81BAEA" fontSize="20" styleName="bold" text="CURVA DE ATALAH"/>
				<s:Label width="500" text="Ferramenta de avaliação do estado nutricional da gestante" />
				
				<mx:LineChart id="curvaDeAtalah" dataProvider="{pesos}" width="600" height="300" showDataTips="true">
					<mx:horizontalAxis>
						<mx:LinearAxis title="IDADE GESTACIONAL EM SEMANAS" minimum="10" maximum="50" interval="2" />
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="IMC" minimum="10" maximum="60" />
					</mx:verticalAxis>
					<mx:seriesFilters>
						<fx:Array/>
					</mx:seriesFilters>
					<mx:series>
						<mx:LineSeries displayName="IMC" form="curve" yField="imc" xField="semana">
							<mx:lineStroke>
								<mx:SolidColorStroke color="#81BAEA" weight="7" />
							</mx:lineStroke>
							<mx:itemRenderer>
								<fx:Component>
									<mx:CrossItemRenderer />
								</fx:Component>
							</mx:itemRenderer>
						</mx:LineSeries>
					</mx:series>
				</mx:LineChart>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="MAN">
			<s:VGroup gap="5">
				<s:Label width="500" color="#81BAEA" fontSize="20" styleName="bold" text="RESULTADO DA MINI AVALIAÇÃO NUTRICIONAL"/>
				<s:Label width="500" text="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
			</s:VGroup>
			<s:Label id="resultadoMAN" x="0" y="100" color="#81BAEA" fontSize="40" styleName="bold"
					 text="DESNUTRIDO"/>
		</s:NavigatorContent>
	</mx:ViewStack>
</s:NavigatorContent>
