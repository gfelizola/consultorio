<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="984" height="400"
					creationComplete="init(event)" xmlns:view="app.view.*" xmlns:skin="app.skin.*">
	<fx:Script>
		<![CDATA[
			import app.model.DadosAlimentares;
			import app.model.Refeicao;
			import app.util.General;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.validators.Validator;
			
			private var focusedFormControl:DisplayObject;
			
			[Bindable]
			private var formIsValid:Boolean = false;
			
			private function init(event:FlexEvent):void
			{
				scroller.addEventListener(MouseEvent.MOUSE_WHEEL, onMouseWheel, true);
				
				for each( var validator:Validator in validators ){
					UIComponent(validator.source).addEventListener(Event.CHANGE, validateForm);
				}
				
				if( General.editandoConsulta ){
					var da:DadosAlimentares = General.consultaAtual.dadosAlimentares;
					
					if( da ){
						if( da.aversoesAlimentares 		) txtAversoes.text 		= da.aversoesAlimentares ;
						if( da.preferenciasAlimentares 	) txtPreferencias.text 	= da.preferenciasAlimentares ;
						if( da.qtdeAgua 				) txtAgua.text 			= da.qtdeAgua ;
						if( da.funcionamentoIntestinal 	) txtIntestinal.text 	= da.funcionamentoIntestinal ;
						if( da.observacoes 				) txtObservacoes.text 	= da.observacoes ;
						
						var refs:ArrayCollection = da.refeicoes ;
						var fim:int = refs.length > 6 ? 6 : refs.length;
						
						for (var i:int = 0; i < fim; i++) 
						{
							var cAlimento:spark.components.TextArea 	= this['txtAlimento' + (i+1)];
//							var cQtde:spark.components.TextArea 		= this['txtQtde' + (i+1)];
							var cRefeicao:spark.components.TextInput 	= this['txtRefeicao' + (i+1)];
							var r:Refeicao 								= refs.getItemAt(i) as Refeicao;
							cAlimento.text 								= r.alimentos ;
//							cQtde.text 									= r.quantidades ;
							cRefeicao.text 								= r.nome ;
						}
					}
				}
			}
			private function validateForm(e:Event):void
			{
				focusedFormControl = e.target as DisplayObject;
				formIsValid = true;
				
				for( var i:int = 0; i < validators.length ; i++  ){
					validate( validators[i] );
				}
			}
			
			private function validate(validator:Validator):Boolean
			{
				var validatorSource:DisplayObject = validator.source as DisplayObject;
				var supressEvents:Boolean = validatorSource != focusedFormControl;
				var event:ValidationResultEvent = validator.validate(null, supressEvents)
				var currentControlIsValid:Boolean = event.type == ValidationResultEvent.VALID;
				
				formIsValid = formIsValid && currentControlIsValid;
				return currentControlIsValid;
			}
			
			private function salvar():Boolean
			{
				if( Validator.validateAll(validators).length > 0 )
				{
					Alert.show("Existem erros no formulário. Por favor, valide os campos vermelhos", "Erro", Alert.OK );
					return false ;
				}
				else
				{
					var da:DadosAlimentares = new DadosAlimentares();
					da.aversoesAlimentares = txtAversoes.text ;
					da.preferenciasAlimentares = txtPreferencias.text ;
					da.qtdeAgua = txtAgua.text ;
					da.observacoes = txtObservacoes.text ;
					da.funcionamentoIntestinal = txtIntestinal.text ;
					
					var r:Refeicao;
					
					for (var i:int = 1; i <= 7; i++) 
					{
						var cAlimento:spark.components.TextArea = this['txtAlimento' + i];
//						var cQtde:spark.components.TextArea = this['txtQtde' + i];
						var cRefeicao:spark.components.TextInput = this['txtRefeicao' + i];
						
						if( cAlimento.text != '' && cRefeicao.text != '' ){
							r 				= new Refeicao();
							r.alimentos 	= cAlimento.text ;
							r.nome 			= cRefeicao.text ;
							r.quantidades 	= '' ;
							
							da.refeicoes.addItem(r);
						}
					}
					
					General.consultaAtual.dadosAlimentares = da ;
					General.salvaConsulta();
					
					if( ! impressao.visible ){
						impressao.visible = impressao.includeInLayout = true ;
					} else {
						impressao.init();
					}
				}
				return true;
			}
			
			private function onSalvar(e:MouseEvent):void
			{
				salvar();
			}
			
			private function onFinalizar(e:MouseEvent):void
			{
				Alert.yesLabel = 'Sim' ;
				Alert.noLabel = 'Não' ;
				Alert.show("Tem certeza que deseja finalizar a consulta?", "Cuidado", Alert.YES|Alert.NO, null, onAlertFinalizar);
			}
			
			private function onAlertFinalizar(e:CloseEvent):void
			{
				if( e.detail == Alert.YES ){
					if( salvar() ){
						Consulta.instance.abreHistorico();
						General.dispatcher.rebuild();
					}
				}
			}
			
			private function onMouseWheel(e:MouseEvent):void
			{
				e.delta = e.delta > 0 ? 5 : -5;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Array id="validators">
			<!-- mx:Validator property="text" requiredFieldError="Campo obrigatório" required="true" id="valAgua" source="{txtAgua}" / -->
		</fx:Array>
	</fx:Declarations>
	
	<skin:ScrollerSemBug id="scroller" top="10" bottom="10" left="0" right="0">
		<s:Group width="100%" height="100%">
			
			<s:VGroup width="440" gap="20" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			
				<s:Label color="#81BAEA" fontSize="20" styleName="bold" text="DADOS ALIMENTARES" />
				<s:Label x="10" text="Recordatório alimentar habitual" />
				
				<s:VGroup width="440" gap="0">
					<s:SkinnableContainer width="100%" height="30" backgroundColor="#F6F9FE">
						<s:Label x="10" y="10" text="REFEIÇÃO / HORÁRIO"/>
						<s:Label x="165" y="10" text="ALIMENTO/QUANTIDADE"/>
						<!--<s:Label x="299" y="10" text="QUANTIDADE"/>-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#FCFDFF">
						<s:TextInput id="txtRefeicao1" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento1" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde1" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#F6F9FE">
						<s:TextInput id="txtRefeicao2" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento2" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde2" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#FCFDFF">
						<s:TextInput id="txtRefeicao3" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento3" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde3" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#F6F9FE">
						<s:TextInput id="txtRefeicao4" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento4" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde4" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#FCFDFF">
						<s:TextInput id="txtRefeicao5" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento5" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde5" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#F6F9FE">
						<s:TextInput id="txtRefeicao6" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento6" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde6" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" height="80" backgroundColor="#FCFDFF">
						<s:TextInput id="txtRefeicao7" x="10" y="10" width="147" skinClass="app.skin.TextInput" />
						<s:TextArea id="txtAlimento7" x="165" y="10" width="265" height="60" skinClass="app.skin.TextArea" />
						<!--<s:TextArea id="txtQtde7" x="299" y="10" width="126" height="60" skinClass="app.skin.TextArea" />-->
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" backgroundColor="#F6F9FE">
						<s:VGroup gap="5" width="440" paddingBottom="10" paddingLeft="10" paddingTop="10" paddingRight="10">
							<s:Label x="10" y="10" text="QUANTIDADE DE ÁGUA POR DIA" />
							<s:Label x="10" y="10" width="420" text="Quantidade relacionada a ingestão diária  total de água relatada pelo paciente." />
							<s:TextArea id="txtAgua" x="10" y="31" width="420" height="40" skinClass="app.skin.TextArea" />
						</s:VGroup>
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" backgroundColor="#F6F9FE">
						<s:VGroup gap="5" width="440" paddingBottom="10" paddingLeft="10" paddingTop="10" paddingRight="10">
							<s:Label x="10" y="10" text="PREFERÊNCIAS ALIMENTARES" />
							<s:Label x="10" y="10" width="420" text="Alimentos que o paciente mais gosta de comer e/ou que tem dificuldade de excluir ou reduzir seu consumo." />
							<s:TextArea id="txtPreferencias" x="10" y="31" width="420" height="40" skinClass="app.skin.TextArea" />
						</s:VGroup>
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" backgroundColor="#FCFDFF">
						<s:VGroup gap="5" width="440" paddingBottom="10" paddingLeft="10" paddingTop="10" paddingRight="10">
							<s:Label x="10" y="10" text="AVERSÕES ALIMENTARES" />
							<s:Label x="10" y="10" width="420" text="Alimentos, texturas e demais peculiaridades alimentares que o paciente não gosta." />
							<s:TextArea id="txtAversoes" x="10" y="31" width="420" height="40" skinClass="app.skin.TextArea" />
						</s:VGroup>
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" backgroundColor="#FCFDFF">
						<s:VGroup gap="5" width="440" paddingBottom="10" paddingLeft="10" paddingTop="10" paddingRight="10">
							<s:Label x="10" y="10" text="FUNCIONAMENTO INTESTINAL" />
							<s:Label x="10" y="10" width="420" text="Padrão habitual de funcionamento intestinal (ocorrência de constipação; fezes amolecidas; diarreia; desconforto gastrointestinal; gases). Consistência e frequência das fezes." />
							<s:TextArea id="txtIntestinal" x="10" y="31" width="420" height="40" skinClass="app.skin.TextArea" />
						</s:VGroup>
					</s:SkinnableContainer>
					
					<s:SkinnableContainer width="100%" backgroundColor="#F6F9FE">
						<s:VGroup gap="5" width="440" paddingBottom="10" paddingLeft="10" paddingTop="10" paddingRight="10">
							<s:Label x="10" y="10" text="OUTRAS INFORMAÇÕES / OBSERVAÇÕES" />
							<s:TextArea id="txtObservacoes" x="10" y="31" width="420" height="79" skinClass="app.skin.TextArea" />
						</s:VGroup>
					</s:SkinnableContainer>
				</s:VGroup>
				
				<s:HGroup gap="10">
					<s:Button id="btnSalvar" x="10" y="760" width="230" label="SALVAR E VISUALIZAR DADOS" click="onSalvar(event)" skinClass="app.skin.Button"/>
					<s:Button id="btnFinalizar" x="270" y="760" width="230" label="FINALIZAR CONSULTA" click="onFinalizar(event)" skinClass="app.skin.Button"/>
				</s:HGroup>
			</s:VGroup>
			
			<view:ConsultaImpressa id="impressao" etapa="2" x="525" y="10" visible="false" includeInLayout="false" />
		</s:Group>
	</skin:ScrollerSemBug>
</s:NavigatorContent>
