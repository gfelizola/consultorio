<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="460" height="800"
					show="init()" creationComplete="init()" backgroundColor="#F6FAFE">
	
	<fx:Style source="app/style/Estilo.css" />
	
	<fx:Script>
		<![CDATA[
			import app.model.Antropometria;
			import app.model.Consulta;
			import app.model.Paciente;
			import app.model.Usuario;
			import app.util.General;
			
			import mx.controls.HRule;
			import mx.events.FlexEvent;
			
			[Bindable]
			public var etapa:int = 1 ;
			
			[Bindable]
			private var usuarioNome:String = '' ;
			
			[Bindable]
			private var usuarioDesc:String = '';
			
			private function init():void
			{
				var usuario:Usuario = General.usuario ;
				var logo:File;
				
				if( usuario.logo != "" )
				{
					logo = File.applicationStorageDirectory.resolvePath("images/" + usuario.logo );
					if( logo.exists ) imgLogo.source = logo.url ;
				}
				
				usuarioNome = 'Dr' ;
				if( usuario.sexo == 'F' ) usuarioNome += 'a' ;
				usuarioNome += '. ' + usuario.nome + ' ' + usuario.sobrenome ;
				
				usuarioDesc = 'CRN: ' + usuario.CRN + ' - REGIONAL: ' + usuario.regional +
					'\n' + usuario.endereco.toUpperCase() + ' - ' + usuario.complemento.toUpperCase() + ', ' + usuario.cidade.toUpperCase() + ' - ' +  usuario.estado.toUpperCase() + '\n' +
					'TEL: ' + usuario.telefone + ' - E-MAIL: ' + usuario.email.toUpperCase() + '\n' +
					'SITE: ' + usuario.site.toUpperCase() ;
				
				verificaConsultaAtual();
			}
			
			private function verificaConsultaAtual():void
			{
				if( General.consultaAtual != null ){
					var c:app.model.Consulta = General.consultaAtual ;
					verificaAntropometria(c);
				}
			}
			
			private function verificaAntropometria(c:app.model.Consulta):void
			{
				var a:Antropometria = c.antropometria ;
				antData.text = c.dataConsulta ? General.getFormattedDate( c.dataConsulta.toString() ) : '';				
				
				if( a != null ){
					
					containerDadosAntropometria.addElement( getAntropometriaGroup('PESO', a.peso ) ) ;
					if( ! isNaN( a.pesoPreGestacional ) ) containerDadosAntropometria.addElement( getAntropometriaGroup('PESO PRÉ-GESTACIONAL', a.pesoPreGestacional ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('ESTATURA', a.estatura ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('CIRCUNFERÊNCIA DA CINTURA', a.circunferenciaCintura ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('CIRCUNFERÊNCIA DO QUADRIL', a.circunferenciaQuadril ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('CIRCUNFERÊNCIA DO TRÍCEPS', a.circunferenciaTriceps ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('CIRCUNFERÊNCIA DA COXA', a.circunferenciaCoxa ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('CIRCUNFERÊNCIA DA PANTURRILHA', a.circunferenciaPanturrilha ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA TRICIPTAL', a.dobraCutaneaTriciptal ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA BICIPTAL', a.dobraCutaneaBiciptal ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA SUBESCAPULAR', a.dobraCutaneaSubescapular ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA AXILAR MÉDIA', a.dobraCutaneaAxilarMedia ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA SUPRA-ILÍACA', a.dobraCutaneaSupraIliaca ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA TORÁCICA', a.dobraCutaneaToracica ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA ABDOMINAL', a.dobraCutaneaAbdominal ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA DA COXA', a.dobraCutaneaCoxa ) ) ;
					containerDadosAntropometria.addElement( getAntropometriaGroup('DOBRA CUTÂNEA DA PANTURRILHA MEDIAL', a.dobraCutaneaPanturrilhaMedial ) ) ;
				}
				
				if( General.pacienteAtual != null ) {
					var p:Paciente = General.pacienteAtual ;
					antNomePaciente.text = p.nomeCompleto.toUpperCase() ;
					antIdadePaciente.text = p.idade + ' ANOS' ;
					antSexoPaciente.text = p.sexo == 'M' ? 'MASCULINO' : 'FEMININO' ;
					antropometria.visible = true ;
				} else {
					antNomePaciente.text = '' ;
					antIdadePaciente.text = '' ;
					antSexoPaciente.text = '' ;
					antropometria.visible = false ;
				}
			}
			
			private function getAntropometriaGroup( nome:String, valor:Number ):Group
			{
				var lNome:Label = new Label();
				lNome.styleName = 'bold' ;
				lNome.x = 0 ;
				lNome.y = 0 ;
				lNome.text = nome.toUpperCase();
				
				var lValor:Label = new Label();
				lValor.y = 0 ;
				lValor.setStyle('textAlign', 'right');
				lValor.width = 200 ;
				lValor.x = 240 ;
				lValor.text = ! isNaN(valor) ? valor.toString() : '0' ;
				
				var rule:HRule = new HRule();
				rule.height = 1 ;
				rule.width = 440 ;
				rule.x = 0 ;
				rule.y = 20 ;
				
				var g:Group = new Group();
				g.addElement(lNome);
				g.addElement(lValor);
				g.addElement(rule);

				return g;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Image id="imgLogo" x="10" y="10" width="326" height="80" scaleMode="letterbox" horizontalAlign="left" />
	<s:Button x="344" y="10" label="IMPRIMIR" icon="assets/images/icoImprimir.png" skinClass="app.skin.Button"/>
	
	<mx:ViewStack id="conteudos" x="0" y="100" width="460" height="100%" selectedIndex="{etapa}">
		<s:NavigatorContent id="antropometria">
			<s:Label x="10" y="0" color="#83BBEA" fontSize="19" styleName="bold" text="ANTROPOMETRIA"/>
			<s:Label id="antData" x="285" y="7" width="145" styleName="bold" text="17/02/2012" textAlign="right"/>
			<s:Label x="10" y="30" styleName="bold" text="NOME:"/>
			<s:Label id="antNomePaciente" x="53" y="33" width="156" styleName="light" text="Aline Maciel"/>
			<s:Label x="217" y="30" styleName="bold" text="IDADE:"/>
			<s:Label x="327" y="30" styleName="bold" text="SEXO:"/>
			<s:Label id="antIdadePaciente" x="263" y="33" width="56" styleName="light" text="120 anos"/>
			<s:Label id="antSexoPaciente" x="364" y="33" width="86" styleName="light" text="MASCULINO"/>
			<s:VGroup id="containerDadosAntropometria" x="10" y="70" width="440" gap="10" />
		</s:NavigatorContent>
	</mx:ViewStack>
	
	<s:Group id="gDados" left="10" bottom="10" right="10">
		<s:Label width="100%" text="{usuarioNome}" styleName="bold" fontSize="18" textAlign="center" />
		<s:Label width="100%" y="25" lineHeight="20" text="{usuarioDesc}" styleName="light" textAlign="center" />
	</s:Group> 
</s:NavigatorContent>
