<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:view="app.view.*"
					width="1004" height="540" creationComplete="init()" focusColor="#528ABA">
	<fx:Script>
		<![CDATA[
			import app.model.Consulta;
			import app.model.DB;
			import app.model.Paciente;
			import app.skin.TabBar;
			import app.skin.TabBarButtonPaciente;
			import app.util.General;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			import nz.co.codec.flexorm.criteria.Sort;
			
			import spark.components.Button;
			import spark.components.ButtonBarButton;
			import spark.components.Label;
			
			
			public static var instance:Consulta;
			
			private var verificaTroca:Boolean = false;
			
			[Bindable]
			private var bindNomeSobrenomePaciente:String = General.pacienteAtual ? General.pacienteAtual.nome.toUpperCase() + ' ' + General.pacienteAtual.sobrenome.toUpperCase() : '';
			
			private function init():void
			{
				instance = this ;
				
				montaAbas();
				
				verificaTroca = false ;
				vsPaciente.selectedIndex = 0;
				verificaTroca = true ;
				
			}
			
			private function montaAbas():void
			{
				var p:Paciente = General.pacienteAtual ;
				var cr:Criteria = DB.em.createCriteria(app.model.Consulta);
				cr.addEqualsCondition("paciente", p.id );
				cr.addSort("dataConsulta", Sort.DESC );
				
				var consultas:ArrayCollection = DB.em.fetchCriteria(cr);
				var c:int = 0 ;
				var pos:Array = [ 0, 3, 2, 1 ];
//				if( consultas.length < 1 ){
//					vsPaciente.removeElement(vHistorico);
//					pos = [ 0, 2, 1 ];
//				} else {
//					vsPaciente.addElement(vHistorico);
//				}
				
				
				for (var i:int = tbPaciente.dataGroup.numChildren - 1; i >= 0 ; i--) 
				{
					var bt:ButtonBarButton = tbPaciente.dataGroup.getChildAt(i) as ButtonBarButton;
					bt.height = bt.maxHeight = c == 0 ? 50 : 40 ;
					bt.y = c == 0 ? 0 : 10 ;
					if( c == 0 ){
						bt.setStyle('skinClass', app.skin.TabBarButtonPaciente);
					}
					var l:Label = bt.labelDisplay as Label;
					l.setStyle("fontSize", c == 0 ? 18 : 13 ) ;
					
					var larg:Number = ( tbPaciente.width - ( pos.length > 3 ? 15 : 30 ) ) / pos.length ; 
					bt.width = larg + ( c == 0 ? 60 : -20 ) ;
					bt.x = ( pos[c] * bt.width ) + ( c== 0 ? 5 : 85 ) ; 
					c++ ;
				}
			}
			
			private function onTelaConsultaChange(event:IndexChangedEvent):void
			{
				if( event.oldIndex == 3 && verificaTroca ){
					if( General.consultaAtual != null && ! General.consultaSalva ){
						Alert.yesLabel = "Sim" ;
						Alert.noLabel = "Não" ;
						Alert.show("Você está cadastrando uma nova consulta. Caso saia dessa tela, a consulta será gravada somente até o ultimo momento que foi salva. Deseja continuar e sair?", "Aviso", Alert.YES|Alert.NO, null, onAlertTrocar );
						return ;
					}
				} else if( event.newIndex == 3 ){
					if( General.consultaAtual != null && ! General.editandoConsulta ){
						General.consultaAtual = new app.model.Consulta();
					}
				}
			}
			
			private function onAlertTrocar(e:CloseEvent):void
			{
				if( e.detail == Alert.NO ){
					vsPaciente.selectedIndex = 3 ;
				}
			}
			
			public function abreHistorico():void
			{
				General.editandoConsulta = false ;
//				montaAbas();
				vsPaciente.selectedIndex = 2 ;
			}
			
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		.nomePaciente {
			chromeColor: #663366;
			color: #9999CC;
		}
	</fx:Style>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:TabBar id="tbPaciente" x="0" y="10" width="100%" height="40" dataProvider="{vsPaciente}" 
			  skinClass="app.skin.TabBar">
		<s:layout>
			<s:BasicLayout />
		</s:layout>
	</s:TabBar>
	
	<s:Rect id="bgVsPaciente" top="60" left="0" right="0" bottom="0" height="100%" topLeftRadiusX="10"
			topLeftRadiusY="10" topRightRadiusX="10" topRightRadiusY="10">
		<s:fill>
			<s:SolidColor color="#ffffff" />
		</s:fill>
		<s:filters>
			<s:GlowFilter color="#000000" alpha="0.3" blurX="10" blurY="10" />
		</s:filters>
	</s:Rect>
	
	<mx:ViewStack id="vsPaciente" x="0" y="60" width="100%" height="100%" creationPolicy="all" change="onTelaConsultaChange(event)">
		<view:ConsultaSumario 		width="100%" height="100%" label="{bindNomeSobrenomePaciente}" />
		<view:ConsultaDadosPaciente width="100%" height="100%" label="DADOS DO PACIENTE" />
		<view:ConsultaHistorico 	width="100%" height="100%" label="HISTÓRICO DE CONSULTAS" id="vHistorico" />
		<view:ConsultaNova 			width="100%" height="100%" label="NOVA CONSULTA" />
	</mx:ViewStack>
	
</s:NavigatorContent>
