<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="1004" height="500"
					creationComplete="init()" show="init()" xmlns:skin="app.skin.*">
	
	<fx:Script>
		<![CDATA[
			import app.model.Antropometria;
			import app.model.Atividade;
			import app.model.AtividadeFisica;
			import app.model.Consulta;
			import app.model.DB;
			import app.model.DadosAlimentares;
			import app.model.ExameAdicional;
			import app.model.ExameBioquimico;
			import app.model.MAN;
			import app.model.Refeicao;
			import app.model.ResumoConsulta;
			import app.skin.TextArea;
			import app.skin.TextInput;
			import app.util.General;
			import app.util.ImpressaoUtils;
			import app.util.Tabela;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.validators.StringValidator;
			import mx.validators.Validator;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			
			import spark.components.HGroup;
			import spark.components.SkinnableContainer;
			import spark.components.TextArea;
			import spark.components.TextInput;
			import spark.components.supportClasses.Skin;
			
			private var focusedFormControl:DisplayObject;
			private var cores:Array;
			private var corTexto:uint = 0x777777 ;
			
			[Bindable]
			private var dateConsulta:String;
			
			private function init():void
			{
				if(General.consultaAtual)
				{
					General.consultaAtual.setResumo();
					
					buidlAll();
				}
			}
			
			private function buildMan():void
			{
				if(General.consultaAtual.man != null) {
					ImpressaoUtils.criaMAN(General.consultaAtual, vgMAN, false, 13, corTexto);					
					scMAN.visible = scMAN.includeInLayout = true ;
				} else {
					scMAN.visible = scMAN.includeInLayout = false ;
				}
			}
			
			private function buildAntropo():void
			{
				if(General.consultaAtual.antropometria != null) {
					ImpressaoUtils.criaAntropometria(General.consultaAtual, vgAntropometria, false, 12, corTexto, true, 0xbbbbbb, 10);
					scAntropometria.visible = scAntropometria.includeInLayout = true ;
				} else {
					scAntropometria.visible = scAntropometria.includeInLayout = false ;
				}
			}
			
			private function buildAlimentos():void
			{
				if(General.consultaAtual.dadosAlimentares != null) {
					ImpressaoUtils.criaDadosAlimentares( General.consultaAtual, vgAlimentos, false, 12, corTexto );
					scAlimentos.visible = scAlimentos.includeInLayout = true ;
				} else {
					scAlimentos.visible = scAlimentos.includeInLayout = false ;
				}
			}
			
			private function buildExames():void
			{
				if(General.consultaAtual.exameBioquimico != null) {
					ImpressaoUtils.criaExamesBioquimicos(General.consultaAtual, vgExames, false, 12, corTexto );
					scExames.visible = scExames.includeInLayout = true ;
				} else {
					scExames.visible = scExames.includeInLayout = false ;
				}
			}
			
			private function buildAtividades():void
			{
				if(General.consultaAtual.atividadeFisica != null) {
					ImpressaoUtils.criaAtividadesFisicas( General.consultaAtual, vgAtividades, false, 12, corTexto );
					scAtividades.visible = scAtividades.includeInLayout = true ;
				} else {
					scAtividades.visible = scAtividades.includeInLayout = false ;
				}
			}
			
			private function buildMetabolismo():void
			{
				if(General.consultaAtual.resumo != null){
					ImpressaoUtils.criaTMB(General.consultaAtual, vgTMB, false, 13, corTexto );
					scTMB.visible = scTMB.includeInLayout = true ;
				} else {
					scTMB.visible = scTMB.includeInLayout = false ;
				}
			}
			
			private function buidlAll():void
			{
				if( General.consultaAtual.dataConsulta ) dateConsulta = General.getFormattedDate(General.consultaAtual.dataConsulta);
				
				if( General.consultaAtual.observacao ){
					txtObservacao.text = General.consultaAtual.observacao;
				}else{
					txtObservacao.visible = txtObservacao.includeInLayout = false ;
				}
				
				txtRecomendacoes.text = General.consultaAtual.recomendacoes ;
				
				cores = [ 0xF6F9FE, 0xFCFDFF ];
				var boxes:Array = [ scTMB, scAntropometria, scMAN, scAlimentos, scAtividades, scExames ];
				
				buildAntropo();
				buildMan();
				buildAlimentos();
				buildAtividades();
				buildExames();
				buildMetabolismo();
				
				
				var c:uint = 0 ;
				for (var i:int = 0; i < boxes.length; i++) 
				{
					var sc:SkinnableContainer = boxes[i];
					if( sc.visible ){
						sc.setStyle('backgroundColor', cores[ c % 2 ? 0 : 1 ] );
						c++ ;
					}
				}
			}
			
			private function backToList(event:MouseEvent = null):void
			{
				ConsultaHistorico.instance.vsHistoricoConsulta.selectedIndex = 0 ;
			}
			
			private function onImprimirResumo(e:MouseEvent):void
			{
				if( txtRecomendacoes.text != '' ){
					General.consultaAtual.recomendacoes = txtRecomendacoes.text ;
					General.salvaConsulta();
				}
				
				var cr:ConsultaResumo = new ConsultaResumo();
				cr.open();
			}
			
		]]>
	</fx:Script>
	
	
	<s:Group width="984" x="10" y="10">
		<s:Label color="#81BAEA" fontSize="20" styleName="bold" text="{dateConsulta}"/>
		<s:Button right="0" label="CONSULTAS ANTERIORES" skinClass="app.skin.Button" click="backToList(event)" />
		<s:Button y="0" right="202" label="VISUALIZAR IMPRESSÃO" skinClass="app.skin.Button" click="onImprimirResumo(event)"/>
	</s:Group>
		
	<skin:ScrollerSemBug id="scroller" x="0" y="52" width="994" height="438" skinClass="app.skin.Scroller">
		<s:VGroup width="994" height="438" gap="10" paddingBottom="10" paddingLeft="10" paddingRight="0" paddingTop="10">
			
			<s:Label color="#81BAEA" fontSize="20" styleName="bold" text="DADOS DA CONSULTA"/>
			
			<s:VGroup id="vgDadosConsulta" width="984">
				<s:SkinnableContainer id="scTMB" width="974" backgroundColor="#FCFDFF">
					<s:VGroup id="vgTMB" width="974" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
						<s:Label text="METABOLISMO BASAL / NECESSIDADES ENERGÉTICAS" fontSize="20" styleName="bold" />
					</s:VGroup>
				</s:SkinnableContainer>
				
				<s:SkinnableContainer id="scAntropometria" width="974" backgroundColor="#F6F9FE">
					<s:VGroup id="vgAntropometria" width="974" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
						<s:Label text="ANTROPOMETRIA" fontSize="20" styleName="bold" />
					</s:VGroup>
				</s:SkinnableContainer>
				
				<s:SkinnableContainer id="scMAN" width="974" backgroundColor="#FCFDFF">
					<s:VGroup id="vgMAN" width="974" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
						<s:Label text="MAN" fontSize="20" styleName="bold" />
					</s:VGroup>
				</s:SkinnableContainer>
				
				<s:SkinnableContainer id="scAlimentos" width="974" backgroundColor="#F6F9FE">
					<s:VGroup id="vgAlimentos" width="974" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
						<s:Label text="HÁBITOS ALIMENTARES" fontSize="20" styleName="bold" />
					</s:VGroup>
				</s:SkinnableContainer>
				
				<s:SkinnableContainer id="scAtividades" width="974" backgroundColor="#FCFDFF">
					<s:VGroup id="vgAtividades" width="974" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
						<s:Label text="ATIVIDADES FÍSICAS" fontSize="20" styleName="bold"/>
					</s:VGroup>
				</s:SkinnableContainer>
				
				<s:SkinnableContainer id="scExames" width="974" backgroundColor="#F6F9FE">
					<s:VGroup id="vgExames" width="974" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
						<s:Label text="EXAMES BIOQUÍMICOS" fontSize="20" styleName="bold"/>
					</s:VGroup>
				</s:SkinnableContainer>
				
				<s:SkinnableContainer width="974" backgroundColor="#F6F9FE">
					<s:Label x="10" y="10" fontSize="20" styleName="bold" text="OBSERVAÇÕES OU OUTRAS INFORMAÇÕES:" />
					<s:Label id="txtObservacao" x="10" y="30" width="954" text="" paddingBottom="10" paddingLeft="0" paddingRight="0" paddingTop="10" />
				</s:SkinnableContainer>
			</s:VGroup>
			
			<s:VGroup width="974">
				<s:Label fontSize="20" styleName="bold" text="RECOMENDAÇÃO DE DIETA:" />
				<s:TextArea id="txtRecomendacoes" width="100%" height="100" skinClass="app.skin.TextArea" />
			</s:VGroup>
		</s:VGroup>
	</skin:ScrollerSemBug>
</s:NavigatorContent>
