<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="1004" height="540"
					creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import app.model.DB;
			import app.model.Paciente;
			import app.util.General;
			
			import mx.collections.ArrayCollection;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			import nz.co.codec.flexorm.criteria.Sort;
			
			[Bindable]
//			public var pacientes:ArrayCollection =  new ArrayCollection();
			
			public function init():void
			{
				txtBemVindo.text = "Bem-vind" + ( General.usuario.sexo == "M" ? "o" : "a" ) ;
				txtNome.text = General.usuario.nome ;
				
				var c:Criteria = DB.em.createCriteria( Paciente );
				c.addEqualsCondition("usuario_id", General.usuario.id );
				
				try
				{
					c = DB.em.createCriteria(Paciente);
					c.addEqualsCondition("usuario", General.usuario.id.toString() )
					.addNotNullCondition("dataUltimaConsulta")
					.addSort("dataUltimaConsulta", Sort.DESC )
					.addSort("nome")
					.addSort("sobrenome");
					
					var pacientes:ArrayCollection = DB.em.fetchCriteria(c);
					
					if( pacientes.length < 1 ) addSemPacientes();
					else {
						dgPacientes.dataProvider = pacientes ;
						dgPacientes.visible = true ;
					}
				} 
				catch(error:Error) 
				{
					trace("Erro na consulta SQL", error.message, error.getStackTrace() );
					addSemPacientes();
				}
			}
			
			private function onPacientesError(e:SQLErrorEvent):void
			{
				trace( "não tem pacientes" );
				addSemPacientes();
			}
			
			private function onPacientesResult(e:SQLEvent):void
			{
				trace( "tem pacientes" );
			}
			
			private function addSemPacientes():void
			{
				var l:Label = new Label();
				l.text = "Você ainda não possui consultas e/ou pacientes cadastrados." ;
				l.x = 476 ;
				l.y = 70 ;
				
				addElement(l);
			}
			
		]]>
	</fx:Script>
	
	<s:Label id="txtBemVindo" x="39" y="43" color="#83BBEA" fontSize="30" styleName="bold"
			 text="Bem-vindo"/>
	<s:Label id="txtNome" x="39" y="76" width="352" color="#83BBEA" fontSize="39" styleName="bold"
			 text="Ana Maria"/>
	<s:Label x="476" y="36" width="352" color="#83BBEA" fontSize="19" styleName="bold"
			 text="ÚLTIMOS PACIENTES ATENDIDOS"/>
	<s:Label x="39" y="148" width="390" height="370"
			 text="O Consultório Nutri Saúde é uma ferramenta para facilitar o armazenamento de dados de seus pacientes e o cálculo de informações úteis para a prática clínica.&#xd;&#xd;Você pode acessar de forma rápida as informações de seus pacientes, além de incluir novos acompanhamentos. &#xd;Para localizar um paciente já cadastrado, digite seu nome no campo “Buscar paciente”.&#xd;Se deseja incluir um novo atendimento, é só escolher “Cadastrar Paciente”."/>
	
	<s:DataGrid id="dgPacientes" x="476" y="76" width="518" height="442" visible="false" requestedMaxRowCount="16"
				alternatingRowColors="{[0xF6F9FE, 0xFCFDFF]}"
				skinClass="app.skin.DataGridSkin">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="nome" headerText="Nome">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer verticalCenter="1">
								
								<fx:Script>
									<![CDATA[
										import app.controller.Navigation;
										import app.enums.EAreas;
										import app.model.Paciente;
										import app.util.General;
										private function goPaciente(e:MouseEvent):void
										{
											var p:Paciente = data as Paciente;
											General.pacienteAtual = p;
											Navigation.navega(EAreas.CONSULTA);
										}
									]]>
								</fx:Script>
								
								<s:Button y="4" label="{data.nome.toUpperCase() + ' ' + data.sobrenome.toUpperCase()}" skinClass="app.skin.TextButton" buttonMode="true" click="goPaciente(event)" />
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn dataField="nome" headerText="Data" width="150">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<fx:Script>
									<![CDATA[
										import app.util.General;
									]]>
								</fx:Script>
								<s:Button y="4" icon="assets/images/icoAgenda.png" label="{General.getFormattedDate(new Date(data.dataUltimaConsulta))}" skinClass="app.skin.TextButton" />
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn  headerText="Editar" width="150">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								
								<fx:Script>
									<![CDATA[
										import app.controller.Navigation;
										import app.enums.EAreas;
										import app.model.Paciente;
										import app.util.General;
										private function editarPaciente(event:MouseEvent):void
										{
											var p:Paciente = data as Paciente;
											General.pacienteAtual = p;
											Navigation.navega(EAreas.CADASTRO_PACIENTE);
										}
									]]>
								</fx:Script>
								
								<s:Button y="4" icon="assets/images/icoEditar.png" label="EDITAR PACIENTE" skinClass="app.skin.TextButton" buttonMode="true" click="editarPaciente(event)" />
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
</s:NavigatorContent>
