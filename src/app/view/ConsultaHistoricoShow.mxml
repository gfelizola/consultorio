<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
					creationComplete="init()" show="init()">
	
	<fx:Script>
		<![CDATA[
			import app.model.Consulta;
			import app.model.DB;
			import app.skin.TextArea;
			import app.skin.TextInput;
			import app.util.General;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.validators.StringValidator;
			import mx.validators.Validator;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			
			import spark.components.HGroup;
			import spark.components.SkinnableContainer;
			import spark.components.TextArea;
			import spark.components.TextInput;
			
			private var focusedFormControl:DisplayObject;
			
			[Bindable]
			private var dateConsulta:String;
			
			private function init():void
			{
				if(General.consultaAtual)
				{
					dateConsulta = General.getFormattedDate(General.consultaAtual.dataConsulta.toString());
					txtObservacao.text = General.consultaAtual.observacao;
				}
				else{
					//...
				}
			}
			
			private function buildMan():void
			{
				
			}
			
			private function buildAntropo():void
			{
				if(General.consultaAtual.antropometria != null)
				{
					// Add no stage
					if(!dadosAccordion.contains(antropoAccordion))
					{
						antroPeso.text = General.consultaAtual.antropometria.peso as String;
						antroEstatura.text = General.consultaAtual.antropometria.estatura as String;
						dadosAccordion.addElement(antropoAccordion);
					}
				}
				else
				{
					// Remove do stage
					if(dadosAccordion.contains(antropoAccordion))dadosAccordion.removeChild(antropoAccordion);
				}
			}
			
			private function backToList(event:MouseEvent):void
			{
				trace('volta para lista');
				ConsultaHistorico.instance.viewstackHistoricoConsulta.selectedIndex = 0 ;
			}
		]]>
	</fx:Script>
	
	<s:Scroller id="scroller" x="0" y="0" width="100%" height="100%" skinClass="app.skin.Scroller">
		<s:VGroup width="100%" height="100%" gap="20" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:HGroup width="100%" gap="10" requestedColumnCount="2" verticalAlign="middle">
				<s:Label color="#81BAEA" fontSize="20" styleName="bold" text="{dateConsulta}"/>
				<s:Button label="Consultas Anteriores" skinClass="app.skin.Button" click="backToList(event)" />
			</s:HGroup>
			<s:HGroup width="100%" verticalAlign="baseline">
				<s:Label fontSize="15" styleName="bold" text="RECOMENDAÇÃO DE DIETA:"/>
				<s:Label id="txtRecomendaDieta" text="Texto da recomendação da dieta"/>
			</s:HGroup>
			<s:SkinnableContainer width="100%" backgroundColor="#F6F9FE">
				<s:Label id="txtObservacao" text="Texto da observação" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" />
			</s:SkinnableContainer>
			<s:SkinnableContainer width="100%" backgroundColor="#FCFDFF">
				<s:Label color="#81BAEA" fontSize="20" styleName="bold" text="DADOS DA CONSULTA"/>
			</s:SkinnableContainer>
			<mx:Accordion width="100%" height="100%" id="dadosAccordion">
				<mx:VBox label="MAN" id="manAccordion"></mx:VBox>
				<mx:VBox label="ANTROPOMETRIA" id="antropoAccordion">
					<s:Label text="Peso" /><s:Label id="antroPeso" />
					<s:Label text="Estatura" /><s:Label id="antroEstatura" />
				</mx:VBox>
				<mx:VBox label="HÁBITOS ALIMENTARES" id="habitosAccordion"></mx:VBox>
				<mx:VBox label="ATIVIDADES FÍSICAS" id="atividadesAccordion"></mx:VBox>
				<mx:VBox label="EXAMES BIOQUÍMICOS" id="examesAccordion"></mx:VBox>
			</mx:Accordion>
		</s:VGroup>
	</s:Scroller>
</s:NavigatorContent>
