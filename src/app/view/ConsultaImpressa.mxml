<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="460" height="650"
					show="init()" creationComplete="init()">
	
	<!--
	<fx:Style source="app/style/Estilo.css" />
	-->
	
	<fx:Script>
		<![CDATA[
			import app.model.Antropometria;
			import app.model.Atividade;
			import app.model.AtividadeFisica;
			import app.model.Consulta;
			import app.model.DadosAlimentares;
			import app.model.Exame;
			import app.model.ExameAdicional;
			import app.model.ExameBioquimico;
			import app.model.MAN;
			import app.model.Paciente;
			import app.model.Refeicao;
			import app.model.Usuario;
			import app.util.General;
			import app.util.ImpressaoUtils;
			
			import avmplus.FLASH10_FLAGS;
			
			import mx.controls.HRule;
			import mx.events.FlexEvent;
			import mx.printing.FlexPrintJob;
			import mx.printing.FlexPrintJobScaleType;
			
			[Bindable]
			public var etapa:int = 0 ;
			
			[Bindable]
			private var currTitulo:String = '';
			
			private var titulos:Array = [];
			
			[Bindable]
			private var usuarioNome:String = '' ;
			
			[Bindable]
			private var usuarioDesc:String = '';
			
			public function init():void
			{
				var usuario:Usuario = General.usuario ;
				var logo:File;
				
				if( usuario.logo != "" )
				{
					logo = File.applicationStorageDirectory.resolvePath("images/" + usuario.logo );
					if( logo.exists ) imgLogo.source = logo.url ;
				}
				
				usuarioNome = 'Dr' ;
				if( usuario.sexo == 'F' ) usuarioNome += 'a' ;
				usuarioNome += '. ' + usuario.nome + ' ' + usuario.sobrenome ;
				
				usuarioDesc = 'CRN: ' + usuario.CRN + ' - REGIONAL: ' + usuario.regional + '\n' ;
				
				var endereco:String = '' ;
				if( usuario.endereco ) endereco += usuario.endereco.toUpperCase() ;
				if( usuario.complemento ) endereco += ' - ' + usuario.complemento.toUpperCase() ;
				if( usuario.cidade ) endereco += ', ' + usuario.cidade.toUpperCase() ;
				if( usuario.estado ) endereco += ' - ' + usuario.estado.toUpperCase() ;
				
				if( endereco != '' ) usuarioDesc += endereco + '\n' ;
				
				var contatos:String = ''
				if( usuario.telefone ) contatos += 'TEL: ' + usuario.telefone + ' - ' ;
				if( usuario.email ) contatos += 'E-MAIL: ' + usuario.email + '\n' ;
				if( usuario.site ) contatos += 'SITE: ' + usuario.site ;
				usuarioDesc += contatos ;
				
				titulos = ['ANTROPOMETRIA', 'ATIVIDADES FÍSICAS', 'DADOS ALIMENTARES', 'EXAMES BIOQUÍMICOS', 'MAN - MINI AVALIAÇÃO NUTRICIONAL', 'OBSERVAÇÕES'];
				
				verificaConsultaAtual();
			}
			
			private function verificaConsultaAtual():void
			{
				if( General.pacienteAtual != null ) {
					var p:Paciente = General.pacienteAtual ;
					impNomePaciente.text = p.nomeCompleto.toUpperCase() ;
					
					var idade:Number = Math.floor( p.idade / 12 );
					var strIdade:String = idade + ' ANOS' ; 
					
					if( idade < 20 ) {
						var idadeMod:Number = p.idade % 12 ;
						if( idadeMod ) strIdade += " E " + idadeMod +" MESES";
					}
					
					impIdadePaciente.text = strIdade ;
					
					impSexoPaciente.text = p.sexo == 'M' ? 'MASCULINO' : 'FEMININO' ;
					antropometria.visible = true ;
				} else {
					impNomePaciente.text = '' ;
					impIdadePaciente.text = '' ;
					impSexoPaciente.text = '' ;
					antropometria.visible = false ;
				}
				
				if( General.consultaAtual != null ){
					var c:app.model.Consulta = General.consultaAtual ;
					impData.text = c.dataConsulta ? General.getFormattedDate( c.dataConsulta ) : '';	
					
					switch(etapa)
					{
						case 0: 	verificaAntropometria(c);		break;
						case 1: 	verificaAtividadesFisicas(c);	break;
						case 2: 	verificaDadosalimentares(c);	break;
						case 3: 	verificaExames(c);				break;
						case 4: 	verificaMAN(c);					break;
						case 5: 	verificaObservacao(c);			break;
					}
					currTitulo = titulos[etapa];
				}
			}
			
			private function verificaAntropometria(c:app.model.Consulta):void
			{
				ImpressaoUtils.criaAntropometria(c, containerDadosAntropometria, true, 10, 0x475766, true, 0xbbbbbb, 7);
			}
			
			private function verificaAtividadesFisicas(c:app.model.Consulta):void
			{
				ImpressaoUtils.criaAtividadesFisicas(c, containerAtividades );
			}
			
			private function verificaDadosalimentares(c:app.model.Consulta):void
			{
				ImpressaoUtils.criaDadosAlimentares(c, containerRefeicoes);
			}
			
			private function verificaExames(c:app.model.Consulta):void
			{
				ImpressaoUtils.criaExamesBioquimicos(c, containerExames, true, false);
			}
			
			private function verificaMAN(c:app.model.Consulta):void
			{
				ImpressaoUtils.criaMAN(c, containerMAN, true);
			}
			
			private function verificaObservacao(c:app.model.Consulta):void
			{
				if( c.observacao != '' ){
					textoObservacao.text = c.observacao ;
				}
			}
			
			private function onImprimir(e:MouseEvent):void
			{
				btnImprimir.visible = false ;
				scImpressao.setStyle('backgroundColor', '0xffffff');
				
				var pj:FlexPrintJob = new FlexPrintJob();
				pj.start();
				
				pj.addObject( scImpressao, FlexPrintJobScaleType.SHOW_ALL );
				//pj.addObject( scImpressao, FlexPrintJobScaleType.MATCH_HEIGHT );
				//pj.addObject( scImpressao, FlexPrintJobScaleType.SHOW_ALL );
				pj.send();
				
				btnImprimir.visible = true ;
				scImpressao.setStyle('backgroundColor', '0xF6FAFE');
			}
			
			private function sPontos(p:int):String
			{
				return p + ( p > 1 ? ' pontos' : ' ponto') ;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:SkinnableContainer id="scImpressao" x="0" y="0" width="100%" height="100%" backgroundColor="#F6FAFE">
		<s:VGroup width="100%">
			<s:Group height="150">
				<s:Image id="imgLogo" x="10" y="10" width="326" height="60" scaleMode="letterbox" horizontalAlign="left" />
				<s:Button id="btnImprimir" x="344" y="10" label="IMPRIMIR" icon="assets/images/icoImprimir.png" skinClass="app.skin.Button" click="onImprimir(event)"/>
				
				<s:Label id="impTitulo" x="10" y="75" color="#83BBEA" fontSize="19" styleName="bold" text="{currTitulo}"/>
				<s:Label id="impData" right="10" y="75" width="145" styleName="bold" text="" textAlign="right"/>
				
				<s:Label x="10" y="100" styleName="bold" text="NOME:"/>
				<s:Label id="impNomePaciente" x="53" y="100" width="259" styleName="light" text=""/>
				
				<s:Label x="10" y="125" styleName="bold" text="IDADE:"/>
				<s:Label id="impIdadePaciente" x="53" y="124" width="260" styleName="light" text=""/>
				
				<s:HGroup right="10" y="100">
					<s:Label styleName="bold" text="SEXO:"/>
					<s:Label id="impSexoPaciente" styleName="light" text="MASCULINO" textAlign="right" />
				</s:HGroup>
			</s:Group>

			<mx:ViewStack id="conteudos" x="0" y="151" width="460" height="549" selectedIndex="{etapa}">
				<s:NavigatorContent id="antropometria">
					<s:VGroup id="containerDadosAntropometria" width="440" x="10" y="7" gap="5" />
				</s:NavigatorContent>
				
				<s:NavigatorContent id="atividadeFisica">
					<s:VGroup gap="20" x="10">
						<s:VGroup id="containerAtividades" width="440" gap="10" />
					</s:VGroup>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="dadosAlimentares">
					<s:VGroup id="containerRefeicoes" width="440" gap="5" x="10">
						<s:Label styleName="bold" text="RECORDATÓRIO ALIMENTAR HABITUAL" />
					</s:VGroup>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="examesBioquimicos">
					<s:VGroup id="containerExames" width="440" gap="10" x="10">
					</s:VGroup>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="man">
					<s:VGroup id="containerMAN" width="440" x="10" gap="10">
						<s:VGroup>
							<s:HGroup>
								<s:Label fontSize="10" text="Pontos da triagem"/>
								<s:Label fontSize="9" text="(subtotal máximo de 14 pontos)"/>
							</s:HGroup>
							<mx:HRule width="440"/>
							<s:Label id="txtResultadoTriagem" x="10" y="46" width="415" fontSize="12" styleName="bold" text="8 pontos - Estado nutricional: DESNUTRIDO"/>
						</s:VGroup>
						<s:VGroup>
							<s:Label text="Pontuação"/>
							<mx:HRule width="440"/>
							
							<s:Group width="440">
								<s:Label fontSize="11" styleName="bold" text="Avaliação global"/>
								<s:Label x="90" y="4" fontSize="9" styleName="light" text="(máximo 16 pontos)"/>
								<s:Label right="0" id="txtPontosGlobal" fontSize="10" text="15 pontos" textAlign="right"/>
							</s:Group>
							
							<s:Group width="440">
								<s:Label fontSize="11" styleName="bold" text="Pontos da triagem"/>
								<s:Label right="0" id="txtPontosTriagem" fontSize="10" text="13 pontos" textAlign="right"/>
							</s:Group>
							
							<s:Group width="440">
								<s:Label fontSize="11" styleName="bold" text="Pontos total"/>
								<s:Label x="70" y="5" fontSize="9" styleName="light" text="(máximo 30 pontos)"/>
								<s:Label right="0" id="txtPontuacaoFinal" fontSize="10" text="28 pontos" textAlign="right"/>
							</s:Group>
							
							<mx:HRule width="440"/>
							
							<s:HGroup>
								<s:Label text="Avaliação do estado nutricional"/>
								<s:Label id="txtEstadoNutricional" fontSize="10" styleName="bold" text="NORMAL"/>
							</s:HGroup>
						</s:VGroup>
					</s:VGroup>
				</s:NavigatorContent>
				
				<s:NavigatorContent id="observacoes">
					<s:Group width="440">
						<s:Label id="textoObservacao" x="10" width="440" styleName="light" />
					</s:Group>
				</s:NavigatorContent>
			</mx:ViewStack>
		</s:VGroup>
		
		<s:Group id="gDados" width="100%" bottom="10">
			<s:Label width="100%" text="{usuarioNome}" styleName="bold" fontSize="11" textAlign="center" />
			<s:Label width="100%" y="20" lineHeight="12" text="{usuarioDesc}" styleName="light" fontSize="10" textAlign="center" />
		</s:Group>
	</s:SkinnableContainer>
</s:NavigatorContent>
