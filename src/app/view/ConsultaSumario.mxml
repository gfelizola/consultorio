<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:view="app.view.*"
					width="1004" height="500" creationComplete="init()" show="init()">
	<fx:Script>
		<![CDATA[
			import app.controller.Navigation;
			import app.enums.EAreas;
			import app.enums.EIdades;
			import app.model.AtividadeFisica;
			import app.model.Consulta;
			import app.model.DB;
			import app.model.Paciente;
			import app.skin.ComboBox;
			import app.util.General;
			import app.util.Helpers;
			
			import mx.charts.Legend;
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			import nz.co.codec.flexorm.criteria.Criteria;
			import nz.co.codec.flexorm.criteria.Sort;
			
			import spark.components.ComboBox;
			import spark.events.IndexChangeEvent;

			private var consultas:ArrayCollection;
			
			[Bindable]
			private var pesos:ArrayCollection;
			
			private function init():void
			{
				var p:Paciente = General.pacienteAtual ;
				if( p == null ) {
					Navigation.navega(EAreas.HOME);
					return ;
				}
				
				var idade:Number = 0 ;
				var meses:Number = 0 ;
				
				if( p.dataNascimento ){
					meses = Helpers.idade( p.dataNascimento );
					idade = Math.floor( meses / 12 );
					txtIdade.text = idade + " ANOS" ;
					
					if( idade < 20 ) {
						var idadeMod:Number = meses % 12 ;
						if( idadeMod ) txtIdade.text += " E " + idadeMod +" MESES";
					}
				} else {
					txtIdade.visible = txtIdade.includeInLayout = false ;
				}
				
				var perfil:String = "";
				txtSemanaGestacional.visible = false ;
				
				if( idade >= EIdades.IDOSO ) {
					perfil = "IDOSO" ;
				} else if( idade <= EIdades.CRIANCA ) {
					perfil = "CRIANÇA" ;
					if( idade >= 10 ) perfil = "ADOLESCENTE" ;
				} else {
					if( p.gestante )
					{
						perfil = "GESTANTE" ;
						if( p.dataUltimaMenstruacao ){
							txtSemanaGestacional.text = p.semanaGestacional + "ª SEMANA GESTACIONAL" ;
							txtSemanaGestacional.visible = true ;
						} else {
							txtSemanaGestacional.visible = txtSemanaGestacional.includeInLayout = false ;
						}
					} else {
						perfil = "ADULTO" ;
						if( p.nutriz ) perfil += " / NUTRIZ" ;
					}
				}
				
				var c:Criteria = DB.em.createCriteria(app.model.Consulta);
				c.addEqualsCondition("paciente", p.id );
				c.addSort("dataConsulta", Sort.DESC );
				
				consultas = DB.em.fetchCriteria(c);
				var consulta:app.model.Consulta = consultas.length > 0 ? consultas.getItemAt(0) as app.model.Consulta : null;
				
				if( consulta ) {
					txtUltimaConsulta.text = Helpers.dateFormat(consulta.dataConsulta);
					
					if( consulta.antropometria ){
						txtUltimoIMC.text = consulta.antropometria.imc.toFixed(2) + '\n' + consulta.antropometria.getIMCDescription(consulta) ;
					} else {
						txtUltimoIMC.text = "N/A" ;
					}
					
					if( consulta.atividadeFisica )
					{
						var nivelAtividade:String = "" ;
						switch(consulta.atividadeFisica.nivel)
						{
							case AtividadeFisica.MUITO_ATIVO:
								nivelAtividade = "MUITO ATIVO" ;
								break;
							case AtividadeFisica.ATIVO:
								nivelAtividade = "ATIVO" ;
								break;
							case AtividadeFisica.POUCO_ATIVO:
								nivelAtividade = "POUCO ATIVO" ;
								break;
							case AtividadeFisica.SEDENTARIO:
								nivelAtividade = "SEDENTÁRIO" ;
								break;
						}
						
						txtAtividade.text = nivelAtividade ;
					} else {
						txtAtividade.visible = txtAtividade.includeInLayout = false ;
					}
					
					txtPerfil.text = perfil ;
				}
				else
				{
					txtUltimaConsulta.text = "NENHUMA CONSULTA REALIZADA" ;
					txtUltimoIMC.text = "N/A" ;
					txtAtividade.text = "" ;
					txtAtividade.visible = txtAtividade.includeInLayout = false ;
					
					Alert.noLabel = "Não" ;
					Alert.yesLabel = "Sim" ;
					
					Alert.show("Este paciente ainda não possui nenhuma consulta cadastrada.\nDeseja iniciar uma agora", "Confirma consulta", Alert.YES|Alert.NO, null, onAlertaNovaConsulta);
				}
			}
			
			private function onAlertaNovaConsulta(e:CloseEvent):void
			{
				if( e.detail == Alert.YES )
				{
					if( General.consultaAtual == null ) General.consultaAtual = new app.model.Consulta();
					ViewStack(this.parent).selectedIndex = 3 ;
				}
			}
			
			public function refresh():void
			{
				init(); 
				vGrafico.init();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:HGroup top="10" bottom="10" left="10" right="10" gap="20">
		<s:Group width="180" height="100%">
			<s:Rect width="100%" height="100%" radiusX="10" radiusY="10">
				<s:fill>
					<s:SolidColor color="#FAFDFE"></s:SolidColor>
				</s:fill>
			</s:Rect>
			
			<s:VGroup gap="6" x="10" y="10">
				<s:Label id="txtPerfil" width="100%" color="#81BAEA" fontSize="20" styleName="bold" text=""/>
				<s:Label id="txtIdade" width="100%"  text=""/>
				<s:Label id="txtAtividade" width="100%"  text=""/>
				<s:Label id="txtSemanaGestacional" width="100%" text=""/>
			</s:VGroup>
			
			<mx:HRule x="10" y="170" width="90%" height="2" chromeColor="#E0EFFB"/>
			
			<s:VGroup width="100%" paddingLeft="10" paddingRight="10" gap="10" y="200">
				<s:Label width="100%" color="#81BAEA" fontSize="20" styleName="bold" text="ÚLTIMA CONSULTA"/>
				<s:Label id="txtUltimaConsulta" width="100%" text=""/>
			</s:VGroup>
			
			<mx:HRule x="10" y="330" width="90%" height="2" chromeColor="#E0EFFB"/>
			
			<s:VGroup width="100%" paddingLeft="10" paddingRight="10" gap="10" y="350">
				<s:Label width="100%" color="#81BAEA" fontSize="20" styleName="bold" text="ÚLTIMO IMC"/>
				<s:Label id="txtUltimoIMC" width="100%" text="" />
			</s:VGroup>
			
		</s:Group>
		
		<s:Group width="100%" height="100%">
			<s:Rect width="100%" height="100%" radiusX="10" radiusY="10">
				<s:fill>
					<s:SolidColor color="#FAFDFE"></s:SolidColor>
				</s:fill>
			</s:Rect>
			
			<view:Graficos id="vGrafico" top="10" bottom="10" left="10" right="10" />
		</s:Group>	
	</s:HGroup>
</s:NavigatorContent>
